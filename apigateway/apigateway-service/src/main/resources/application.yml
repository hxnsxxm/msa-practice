server:
  port: 8000

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka # eureka server

spring:
  application:
    name: apigateway-service
  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: guest
    password: guest
  cloud:
    gateway:
      default-filters:
        - name: GlobalFilter
          args:
            baseMessage: Spring Cloud Gateway Global Filter
            preLogger: true
            postLogger: true
      routes:
#        - id: user-service
#          uri: lb://USER-SERVICE # spring.application.name
#          predicates: # ???
#            - Path=/user-service/** # ???? ?? path
        - id: user-service
          uri: lb://USER-SERVICE # spring.application.name
          predicates: # ???
            - Path=/user-service/login # ???? ?? path
            - Method=POST
          filters:
            - RemoveRequestHeader=Cookie # ???, request header ??: POST? ???? header ?? ? ? ??? ???? ??
            - RewritePath=/user-service/(?<segment>.*), /$\{segment} # comma(,)? ???? ? ??? ?? ??? ????.
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/users
            - Method=POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/**
            - Method=GET
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
            - AuthorizationHeaderFilter # ????, ???? ??? ??? ????. ?? ??? ?? ??? ??? ????? ??? -> filter ??
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/actuator/**
            - Method=GET,POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
        - id: catalog-service
          uri: lb://CATALOG-SERVICE # spring.application.name
          predicates: # ???
            - Path=/catalog-service/**
        - id: order-service
          uri: lb://ORDER-SERVICE
          predicates:
            - Path=/order-service/**
        - id: first-service
          uri: lb://MY-FIRST-SERVICE
          predicates:
            - Path=/first-service/**
          filters:
#            - AddRequestHeader=first-request, first-request-header2
#            - AddResponseHeader=first-response, first-response-header2
            - CustomFilter
        - id: second-service
          uri: lb://MY-SECOND-SERVICE
          predicates:
            - Path=/second-service/**
          filters:
#            - AddRequestHeader=second-request, second-request-header2
#            - AddResponseHeader=second-response, second-response-header2
            - name: CustomFilter
            - name: LoggingFilter # args ?? ??? name? ???? ?(first service? ?????)
              args:
                baseMessage: Hi, there.
                preLogger: true
                postLogger: true

management:
  endpoints:
    web:
      exposure:
        include: refresh,health,beans,httptrace,busrefresh # acruator에서 사용할 http endpoint

# JWT -> spring cloud config 에서 가져오도록 변경
#token:
#  secret: Q4NSl604sgyHJj1qwEkR3ycUeR4uUAt7WJraD7EN3O9DVM4yyYuHxMEbSF4XXyYJkal13eqgB0F7Bq4H # ??? ???. ???? ? ? ??? -> ??? ?? ??